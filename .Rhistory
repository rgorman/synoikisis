row.traker.v  <- which(entr.tib[, 1] == z[j])
probability.v <- entr.tib$count[row.traker.v ] %>%
divide_by(entr.tib$count[row.traker.v ] %>%
sum() )
entr.tib$probs[row.traker.v] <- probability.v
surprisal.v <- probability.v %>%
log2() %>%
multiply_by(-1)
entr.tib$surprisal[row.traker.v] <- surprisal.v
H.holder.v <- surprisal.v %>%
multiply_by(probability.v)
entr.tib$entropy[row.traker.v] <- H.holder.v
H.summed.v <- H.holder.v %>%
sum()
entr.tib$summed_entropy[row.traker.v] <- H.summed.v
}
View(entr.tib)
i <- 1
doc.xml <- read_xml(file.path(input.dir, files.v[i]))
sent.xml <- xml_find_all(doc.xml, "//sentence")
for (i in seq_along(sent.xml)) {
word.l <- sent.xml[[i]] %>%
xml_find_all("word") %>%
xml_attrs()
word.l <- word.l[which(lengths(word.l) == 7)]
sent.workng.m <- unlist(word.l)  %>%
matrix(ncol = 7, byrow = TRUE)
colnames(sent.workng.m) <- c("id", "form", "lemma", "postag", "relation", "head", "cite")
sent.tib <-  as_tibble(sent.workng.m)
sent.tib$id <- sent.tib$id %>%
as.numeric()
sent.tib$head <- sent.tib$head %>%
as.numeric()
sent.tib <- sent.tib %>%
mutate(arc_direction = NA)
sent.tib <- sent.tib[- which(str_detect(sent.tib$relation, "Aux[xkgXKG]") == TRUE) , ]
for (j in seq_len(nrow(sent.tib))) {
if (is.numeric(sent.tib$head[j]) ) {
if (sent.tib$head[j] %>%
is_in( sent.tib$id)) {
if (sent.tib$id[j] < sent.tib$head[j]) {sent.tib$arc_direction[j] <- "parent_follows"}
if (sent.tib$id[j] > sent.tib$head[j]) {sent.tib$arc_direction[j] <- "parent_precedes"}
}
}
}
sent.tib <- sent.tib %>%
mutate(part_of_speech = NA)
for (k in seq_len(nrow(sent.tib))) {
if (str_detect(sent.tib$postag[k], "^-")) {
} else {
if (str_detect(sent.tib$postag[k], "^[a-z]") ) { # This line needs annotation!!
postag <-  str_extract(sent.tib$postag[k], "^[a-z]")
if (postag == "v") {
sent.tib$part_of_speech[k] <- "verb"
}
if (postag == "n") {
sent.tib$part_of_speech[k] <- "noun"
}
if (postag == "p") {
sent.tib$part_of_speech[k] <- "pronoun"
}
if (postag == "c") {
sent.tib$part_of_speech[k] <- "conjunction"
}
if (postag == "d") {
sent.tib$part_of_speech[k] <- "adverb"
}
if (postag == "l") {
sent.tib$part_of_speech[k] <- "def_article"
}
if (postag == "r") {
sent.tib$part_of_speech[k] <- "preposition"
}
if (postag == "a") {
sent.tib$part_of_speech[k] <- "adjective"
}
if (postag == "u") {
sent.tib$part_of_speech[k] <- "punctuation"
}
if (postag == "NA") {
sent.tib$part_of_speech[k] <- NA
}
}
}
}
sent.tib <- sent.tib %>%
mutate(parent_POS = NA)
sent.tib <- sent.tib %>%
mutate(parent_relation = NA)
y <- sent.tib$id
for (p in seq_len(nrow(sent.tib))) {
x <- sent.tib$head[p]
if (x %in% y) {
if (x > 0) {
sent.tib$parent_POS[p] <- sent.tib$part_of_speech[which(sent.tib$id == x) ]
sent.tib$parent_relation[p] <- sent.tib$relation[which(sent.tib$id == x) ]
}
}
}
if ( i == 1) {
result.tib <- sent.tib
} else {
result.tib <- bind_rows(result.tib, sent.tib)
}
}
result.tib
entr.tib <- result.tib %>%
group_by(part_of_speech, arc_direction) %>%
na.omit() %>%
summarize(count =  n())
entr.tib <- mutate(entr.tib, probs = NA)
entr.tib <- mutate(entr.tib, surprisal = NA)
entr.tib <- mutate(entr.tib, entropy = NA)
entr.tib <- mutate(entr.tib, summed_entropy = NA)
z <- unique(entr.tib[, 1]) %>%
unlist() %>%
as.character()
for (j in seq_along(z)) {
row.traker.v  <- which(entr.tib[, 1] == z[j])
probability.v <- entr.tib$count[row.traker.v ] %>%
divide_by(entr.tib$count[row.traker.v ] %>%
sum() )
entr.tib$probs[row.traker.v] <- probability.v
surprisal.v <- probability.v %>%
log2() %>%
multiply_by(-1)
entr.tib$surprisal[row.traker.v] <- surprisal.v
H.holder.v <- surprisal.v %>%
multiply_by(probability.v)
entr.tib$entropy[row.traker.v] <- H.holder.v
H.summed.v <- H.holder.v %>%
sum()
entr.tib$summed_entropy[row.traker.v] <- H.summed.v
}
View(entr.tib)
i <- 3
doc.xml <- read_xml(file.path(input.dir, files.v[i]))
sent.xml <- xml_find_all(doc.xml, "//sentence")
for (i in seq_along(sent.xml)) {
word.l <- sent.xml[[i]] %>%
xml_find_all("word") %>%
xml_attrs()
word.l <- word.l[which(lengths(word.l) == 7)]
sent.workng.m <- unlist(word.l)  %>%
matrix(ncol = 7, byrow = TRUE)
colnames(sent.workng.m) <- c("id", "form", "lemma", "postag", "relation", "head", "cite")
sent.tib <-  as_tibble(sent.workng.m)
sent.tib$id <- sent.tib$id %>%
as.numeric()
sent.tib$head <- sent.tib$head %>%
as.numeric()
sent.tib <- sent.tib %>%
mutate(arc_direction = NA)
sent.tib <- sent.tib[- which(str_detect(sent.tib$relation, "Aux[xkgXKG]") == TRUE) , ]
for (j in seq_len(nrow(sent.tib))) {
if (is.numeric(sent.tib$head[j]) ) {
if (sent.tib$head[j] %>%
is_in( sent.tib$id)) {
if (sent.tib$id[j] < sent.tib$head[j]) {sent.tib$arc_direction[j] <- "parent_follows"}
if (sent.tib$id[j] > sent.tib$head[j]) {sent.tib$arc_direction[j] <- "parent_precedes"}
}
}
}
sent.tib <- sent.tib %>%
mutate(part_of_speech = NA)
for (k in seq_len(nrow(sent.tib))) {
if (str_detect(sent.tib$postag[k], "^-")) {
} else {
if (str_detect(sent.tib$postag[k], "^[a-z]") ) { # This line needs annotation!!
postag <-  str_extract(sent.tib$postag[k], "^[a-z]")
if (postag == "v") {
sent.tib$part_of_speech[k] <- "verb"
}
if (postag == "n") {
sent.tib$part_of_speech[k] <- "noun"
}
if (postag == "p") {
sent.tib$part_of_speech[k] <- "pronoun"
}
if (postag == "c") {
sent.tib$part_of_speech[k] <- "conjunction"
}
if (postag == "d") {
sent.tib$part_of_speech[k] <- "adverb"
}
if (postag == "l") {
sent.tib$part_of_speech[k] <- "def_article"
}
if (postag == "r") {
sent.tib$part_of_speech[k] <- "preposition"
}
if (postag == "a") {
sent.tib$part_of_speech[k] <- "adjective"
}
if (postag == "u") {
sent.tib$part_of_speech[k] <- "punctuation"
}
if (postag == "NA") {
sent.tib$part_of_speech[k] <- NA
}
}
}
}
sent.tib <- sent.tib %>%
mutate(parent_POS = NA)
sent.tib <- sent.tib %>%
mutate(parent_relation = NA)
y <- sent.tib$id
for (p in seq_len(nrow(sent.tib))) {
x <- sent.tib$head[p]
if (x %in% y) {
if (x > 0) {
sent.tib$parent_POS[p] <- sent.tib$part_of_speech[which(sent.tib$id == x) ]
sent.tib$parent_relation[p] <- sent.tib$relation[which(sent.tib$id == x) ]
}
}
}
if ( i == 1) {
result.tib <- sent.tib
} else {
result.tib <- bind_rows(result.tib, sent.tib)
}
}
entr.tib <- result.tib %>%
group_by(part_of_speech, arc_direction) %>%
na.omit() %>%
summarize(count =  n())
entr.tib <- mutate(entr.tib, probs = NA)
entr.tib <- mutate(entr.tib, surprisal = NA)
entr.tib <- mutate(entr.tib, entropy = NA)
entr.tib <- mutate(entr.tib, summed_entropy = NA)
z <- unique(entr.tib[, 1]) %>%
unlist() %>%
as.character()
for (j in seq_along(z)) {
row.traker.v  <- which(entr.tib[, 1] == z[j])
probability.v <- entr.tib$count[row.traker.v ] %>%
divide_by(entr.tib$count[row.traker.v ] %>%
sum() )
entr.tib$probs[row.traker.v] <- probability.v
surprisal.v <- probability.v %>%
log2() %>%
multiply_by(-1)
entr.tib$surprisal[row.traker.v] <- surprisal.v
H.holder.v <- surprisal.v %>%
multiply_by(probability.v)
entr.tib$entropy[row.traker.v] <- H.holder.v
H.summed.v <- H.holder.v %>%
sum()
entr.tib$summed_entropy[row.traker.v] <- H.summed.v
}
i <- 4
doc.xml <- read_xml(file.path(input.dir, files.v[i]))
sent.xml <- xml_find_all(doc.xml, "//sentence")
for (i in seq_along(sent.xml)) {
word.l <- sent.xml[[i]] %>%
xml_find_all("word") %>%
xml_attrs()
word.l <- word.l[which(lengths(word.l) == 7)]
sent.workng.m <- unlist(word.l)  %>%
matrix(ncol = 7, byrow = TRUE)
colnames(sent.workng.m) <- c("id", "form", "lemma", "postag", "relation", "head", "cite")
sent.tib <-  as_tibble(sent.workng.m)
sent.tib$id <- sent.tib$id %>%
as.numeric()
sent.tib$head <- sent.tib$head %>%
as.numeric()
sent.tib <- sent.tib %>%
mutate(arc_direction = NA)
sent.tib <- sent.tib[- which(str_detect(sent.tib$relation, "Aux[xkgXKG]") == TRUE) , ]
for (j in seq_len(nrow(sent.tib))) {
if (is.numeric(sent.tib$head[j]) ) {
if (sent.tib$head[j] %>%
is_in( sent.tib$id)) {
if (sent.tib$id[j] < sent.tib$head[j]) {sent.tib$arc_direction[j] <- "parent_follows"}
if (sent.tib$id[j] > sent.tib$head[j]) {sent.tib$arc_direction[j] <- "parent_precedes"}
}
}
}
sent.tib <- sent.tib %>%
mutate(part_of_speech = NA)
for (k in seq_len(nrow(sent.tib))) {
if (str_detect(sent.tib$postag[k], "^-")) {
} else {
if (str_detect(sent.tib$postag[k], "^[a-z]") ) { # This line needs annotation!!
postag <-  str_extract(sent.tib$postag[k], "^[a-z]")
if (postag == "v") {
sent.tib$part_of_speech[k] <- "verb"
}
if (postag == "n") {
sent.tib$part_of_speech[k] <- "noun"
}
if (postag == "p") {
sent.tib$part_of_speech[k] <- "pronoun"
}
if (postag == "c") {
sent.tib$part_of_speech[k] <- "conjunction"
}
if (postag == "d") {
sent.tib$part_of_speech[k] <- "adverb"
}
if (postag == "l") {
sent.tib$part_of_speech[k] <- "def_article"
}
if (postag == "r") {
sent.tib$part_of_speech[k] <- "preposition"
}
if (postag == "a") {
sent.tib$part_of_speech[k] <- "adjective"
}
if (postag == "u") {
sent.tib$part_of_speech[k] <- "punctuation"
}
if (postag == "NA") {
sent.tib$part_of_speech[k] <- NA
}
}
}
}
sent.tib <- sent.tib %>%
mutate(parent_POS = NA)
sent.tib <- sent.tib %>%
mutate(parent_relation = NA)
y <- sent.tib$id
for (p in seq_len(nrow(sent.tib))) {
x <- sent.tib$head[p]
if (x %in% y) {
if (x > 0) {
sent.tib$parent_POS[p] <- sent.tib$part_of_speech[which(sent.tib$id == x) ]
sent.tib$parent_relation[p] <- sent.tib$relation[which(sent.tib$id == x) ]
}
}
}
if ( i == 1) {
result.tib <- sent.tib
} else {
result.tib <- bind_rows(result.tib, sent.tib)
}
}
entr.tib <- result.tib %>%
group_by(part_of_speech, arc_direction) %>%
na.omit() %>%
summarize(count =  n())
entr.tib <- mutate(entr.tib, probs = NA)
entr.tib <- mutate(entr.tib, surprisal = NA)
entr.tib <- mutate(entr.tib, entropy = NA)
entr.tib <- mutate(entr.tib, summed_entropy = NA)
z <- unique(entr.tib[, 1]) %>%
unlist() %>%
as.character()
for (j in seq_along(z)) {
row.traker.v  <- which(entr.tib[, 1] == z[j])
probability.v <- entr.tib$count[row.traker.v ] %>%
divide_by(entr.tib$count[row.traker.v ] %>%
sum() )
entr.tib$probs[row.traker.v] <- probability.v
surprisal.v <- probability.v %>%
log2() %>%
multiply_by(-1)
entr.tib$surprisal[row.traker.v] <- surprisal.v
H.holder.v <- surprisal.v %>%
multiply_by(probability.v)
entr.tib$entropy[row.traker.v] <- H.holder.v
H.summed.v <- H.holder.v %>%
sum()
entr.tib$summed_entropy[row.traker.v] <- H.summed.v
}
i <- 5
doc.xml <- read_xml(file.path(input.dir, files.v[i]))
sent.xml <- xml_find_all(doc.xml, "//sentence")
for (i in seq_along(sent.xml)) {
word.l <- sent.xml[[i]] %>%
xml_find_all("word") %>%
xml_attrs()
word.l <- word.l[which(lengths(word.l) == 7)]
sent.workng.m <- unlist(word.l)  %>%
matrix(ncol = 7, byrow = TRUE)
colnames(sent.workng.m) <- c("id", "form", "lemma", "postag", "relation", "head", "cite")
sent.tib <-  as_tibble(sent.workng.m)
sent.tib$id <- sent.tib$id %>%
as.numeric()
sent.tib$head <- sent.tib$head %>%
as.numeric()
sent.tib <- sent.tib %>%
mutate(arc_direction = NA)
sent.tib <- sent.tib[- which(str_detect(sent.tib$relation, "Aux[xkgXKG]") == TRUE) , ]
for (j in seq_len(nrow(sent.tib))) {
if (is.numeric(sent.tib$head[j]) ) {
if (sent.tib$head[j] %>%
is_in( sent.tib$id)) {
if (sent.tib$id[j] < sent.tib$head[j]) {sent.tib$arc_direction[j] <- "parent_follows"}
if (sent.tib$id[j] > sent.tib$head[j]) {sent.tib$arc_direction[j] <- "parent_precedes"}
}
}
}
sent.tib <- sent.tib %>%
mutate(part_of_speech = NA)
for (k in seq_len(nrow(sent.tib))) {
if (str_detect(sent.tib$postag[k], "^-")) {
} else {
if (str_detect(sent.tib$postag[k], "^[a-z]") ) { # This line needs annotation!!
postag <-  str_extract(sent.tib$postag[k], "^[a-z]")
if (postag == "v") {
sent.tib$part_of_speech[k] <- "verb"
}
if (postag == "n") {
sent.tib$part_of_speech[k] <- "noun"
}
if (postag == "p") {
sent.tib$part_of_speech[k] <- "pronoun"
}
if (postag == "c") {
sent.tib$part_of_speech[k] <- "conjunction"
}
if (postag == "d") {
sent.tib$part_of_speech[k] <- "adverb"
}
if (postag == "l") {
sent.tib$part_of_speech[k] <- "def_article"
}
if (postag == "r") {
sent.tib$part_of_speech[k] <- "preposition"
}
if (postag == "a") {
sent.tib$part_of_speech[k] <- "adjective"
}
if (postag == "u") {
sent.tib$part_of_speech[k] <- "punctuation"
}
if (postag == "NA") {
sent.tib$part_of_speech[k] <- NA
}
}
}
}
sent.tib <- sent.tib %>%
mutate(parent_POS = NA)
sent.tib <- sent.tib %>%
mutate(parent_relation = NA)
y <- sent.tib$id
for (p in seq_len(nrow(sent.tib))) {
x <- sent.tib$head[p]
if (x %in% y) {
if (x > 0) {
sent.tib$parent_POS[p] <- sent.tib$part_of_speech[which(sent.tib$id == x) ]
sent.tib$parent_relation[p] <- sent.tib$relation[which(sent.tib$id == x) ]
}
}
}
if ( i == 1) {
result.tib <- sent.tib
} else {
result.tib <- bind_rows(result.tib, sent.tib)
}
}
entr.tib <- result.tib %>%
group_by(part_of_speech, arc_direction) %>%
na.omit() %>%
summarize(count =  n())
entr.tib <- mutate(entr.tib, probs = NA)
entr.tib <- mutate(entr.tib, surprisal = NA)
entr.tib <- mutate(entr.tib, entropy = NA)
entr.tib <- mutate(entr.tib, summed_entropy = NA)
z <- unique(entr.tib[, 1]) %>%
unlist() %>%
as.character()
for (j in seq_along(z)) {
row.traker.v  <- which(entr.tib[, 1] == z[j])
probability.v <- entr.tib$count[row.traker.v ] %>%
divide_by(entr.tib$count[row.traker.v ] %>%
sum() )
entr.tib$probs[row.traker.v] <- probability.v
surprisal.v <- probability.v %>%
log2() %>%
multiply_by(-1)
entr.tib$surprisal[row.traker.v] <- surprisal.v
H.holder.v <- surprisal.v %>%
multiply_by(probability.v)
entr.tib$entropy[row.traker.v] <- H.holder.v
H.summed.v <- H.holder.v %>%
sum()
entr.tib$summed_entropy[row.traker.v] <- H.summed.v
}
View(entr.tib)
u <- c(1, 2, 3)
u %*% u
u %*% u %>%
raise_to_power(.5)
v <- c(4, 5, 6)
v %*% v
v %*% v %>%
raise_to_power(.5)
A <- matrix(c(1, 2,
3, 4 ), 2, 2, byrow = TRUE)
B <- matrix(c(5, 6,
7, 8 ), 2, 2, byrow = TRUE)
t(B)
t(B) %*% A
t(B) %*% A %>%
tr()
t(A) %*% B
t(A) %*% B %>%
tr()
u
u %*% u
(14^.5)
1/(14^.5)
(1/(14^.5)) * u
w_hat <- (1/(14^.5)) * u
w_hat^2
w_hat^2 %>%
sum()
